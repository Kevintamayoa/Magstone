/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package magstone;

import Classes.*;
import Classes.Inventory_Reg;
import Classes.Inventory_Type;
import Classes.Sale;
import Classes.Sale_Inventory;
import Conexion.Conexion;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author macbook
 */
public class Reportes extends javax.swing.JFrame {

    /**
     * Creates new form Reportes
     */
    public Reportes() {
        initComponents();
        btnSemanal.setSelected(true);
        btnRentabilidad.setVisible(false);
    }
 Conexion con;
     DecimalFormat formatea;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        btnAddInsumos = new javax.swing.JButton();
        btnProduccion = new javax.swing.JCheckBox();
        btnCobranza = new javax.swing.JCheckBox();
        btnRentabilidad = new javax.swing.JCheckBox();
        btnVentas = new javax.swing.JCheckBox();
        btnSemanal = new javax.swing.JRadioButton();
        btnMensual = new javax.swing.JRadioButton();
        btnAnual = new javax.swing.JRadioButton();
        btnTrimestral = new javax.swing.JRadioButton();
        cbx1 = new javax.swing.JComboBox<>();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        cbx2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generaci칩n de reportes");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");

        jLabel17.setBackground(new java.awt.Color(217, 234, 220));
        jLabel17.setFont(new java.awt.Font("InaiMathi", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Generaci칩n de reportes");

        btnAddInsumos.setBackground(new java.awt.Color(255, 255, 255));
        btnAddInsumos.setFont(new java.awt.Font("InaiMathi", 0, 24)); // NOI18N
        btnAddInsumos.setForeground(new java.awt.Color(55, 55, 55));
        btnAddInsumos.setText("Generar");
        btnAddInsumos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnAddInsumos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInsumosActionPerformed(evt);
            }
        });

        btnProduccion.setBackground(new java.awt.Color(255, 255, 255));
        btnProduccion.setFont(new java.awt.Font("InaiMathi", 0, 24)); // NOI18N
        btnProduccion.setForeground(new java.awt.Color(52, 52, 52));
        btnProduccion.setSelected(true);
        btnProduccion.setText("Resumen de producci칩n");

        btnCobranza.setBackground(new java.awt.Color(255, 255, 255));
        btnCobranza.setFont(new java.awt.Font("InaiMathi", 0, 24)); // NOI18N
        btnCobranza.setForeground(new java.awt.Color(52, 52, 52));
        btnCobranza.setSelected(true);
        btnCobranza.setText("Cobranza de clientes (Actual)");

        btnRentabilidad.setBackground(new java.awt.Color(255, 255, 255));
        btnRentabilidad.setFont(new java.awt.Font("InaiMathi", 0, 24)); // NOI18N
        btnRentabilidad.setForeground(new java.awt.Color(52, 52, 52));
        btnRentabilidad.setSelected(true);
        btnRentabilidad.setText("Rentabilidad");

        btnVentas.setBackground(new java.awt.Color(255, 255, 255));
        btnVentas.setFont(new java.awt.Font("InaiMathi", 0, 24)); // NOI18N
        btnVentas.setForeground(new java.awt.Color(52, 52, 52));
        btnVentas.setSelected(true);
        btnVentas.setText("Resumen de ventas");

        btnSemanal.setBackground(new java.awt.Color(255, 255, 255));
        btnSemanal.setFont(new java.awt.Font("InaiMathi", 0, 14)); // NOI18N
        btnSemanal.setForeground(new java.awt.Color(51, 51, 51));
        btnSemanal.setSelected(true);
        btnSemanal.setText("Semanal");
        btnSemanal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnSemanalStateChanged(evt);
            }
        });
        btnSemanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSemanalActionPerformed(evt);
            }
        });

        btnMensual.setBackground(new java.awt.Color(255, 255, 255));
        btnMensual.setFont(new java.awt.Font("InaiMathi", 0, 14)); // NOI18N
        btnMensual.setForeground(new java.awt.Color(51, 51, 51));
        btnMensual.setText("Mensual");
        btnMensual.setToolTipText("");
        btnMensual.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnMensualStateChanged(evt);
            }
        });
        btnMensual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMensualActionPerformed(evt);
            }
        });

        btnAnual.setBackground(new java.awt.Color(255, 255, 255));
        btnAnual.setFont(new java.awt.Font("InaiMathi", 0, 14)); // NOI18N
        btnAnual.setForeground(new java.awt.Color(51, 51, 51));
        btnAnual.setText("Anual");
        btnAnual.setToolTipText("");
        btnAnual.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnAnualStateChanged(evt);
            }
        });
        btnAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnualActionPerformed(evt);
            }
        });

        btnTrimestral.setBackground(new java.awt.Color(255, 255, 255));
        btnTrimestral.setFont(new java.awt.Font("InaiMathi", 0, 14)); // NOI18N
        btnTrimestral.setForeground(new java.awt.Color(51, 51, 51));
        btnTrimestral.setText("Trimestral");
        btnTrimestral.setToolTipText("");
        btnTrimestral.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnTrimestralStateChanged(evt);
            }
        });
        btnTrimestral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrimestralActionPerformed(evt);
            }
        });

        cbx1.setBackground(new java.awt.Color(255, 255, 255));
        cbx1.setFont(new java.awt.Font("InaiMathi", 0, 12)); // NOI18N
        cbx1.setForeground(new java.awt.Color(51, 51, 51));

        lbl1.setBackground(new java.awt.Color(255, 255, 255));
        lbl1.setFont(new java.awt.Font("InaiMathi", 0, 12)); // NOI18N
        lbl1.setForeground(new java.awt.Color(51, 51, 51));
        lbl1.setText("Semana");

        lbl2.setBackground(new java.awt.Color(255, 255, 255));
        lbl2.setFont(new java.awt.Font("InaiMathi", 0, 12)); // NOI18N
        lbl2.setForeground(new java.awt.Color(51, 51, 51));
        lbl2.setText("A침o");

        cbx2.setBackground(new java.awt.Color(255, 255, 255));
        cbx2.setFont(new java.awt.Font("InaiMathi", 0, 12)); // NOI18N
        cbx2.setForeground(new java.awt.Color(51, 51, 51));
        cbx2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020" }));
        cbx2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx2ItemStateChanged(evt);
            }
        });
        cbx2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSemanal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnMensual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(btnAnual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(btnTrimestral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbx1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbx2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRentabilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCobranza, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSemanal)
                    .addComponent(btnMensual)
                    .addComponent(btnAnual)
                    .addComponent(btnTrimestral))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbx1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl1)
                    .addComponent(cbx2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl2))
                .addGap(20, 20, 20)
                .addComponent(btnVentas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnProduccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCobranza)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRentabilidad)
                .addGap(20, 20, 20)
                .addComponent(btnAddInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnProduccion.getAccessibleContext().setAccessibleName("");
        btnCobranza.getAccessibleContext().setAccessibleName("");
        btnRentabilidad.getAccessibleContext().setAccessibleName("");
        btnVentas.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
	private Date addDays(java.util.Date date,int days){
    GregorianCalendar cal = new GregorianCalendar();
		cal.setTime(date);
		cal.add(Calendar.DATE, days);
				
		return cal.getTime();
	}
    private void btnAddInsumosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInsumosActionPerformed
        try{
         if(!btnRentabilidad.isSelected()&&!btnVentas.isSelected()&&!btnProduccion.isSelected()&&!btnCobranza.isSelected()){
                  JOptionPane.showMessageDialog(this,"No se encuentra ninguna informaci칩n seleccionada para el reporte.","Error de generaci칩n",JOptionPane.ERROR_MESSAGE);
                  return;
         }
         GenReporte();
         
        }catch(Exception e){}finally{}
    }//GEN-LAST:event_btnAddInsumosActionPerformed

    private void btnSemanalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnSemanalStateChanged
      Cambio();
    }//GEN-LAST:event_btnSemanalStateChanged

    private void btnMensualStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnMensualStateChanged
      Cambio();
    }//GEN-LAST:event_btnMensualStateChanged

    private void btnAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnualActionPerformed
     btnSemanal.setSelected(false);
   btnMensual.setSelected(false);
   btnAnual.setSelected(true);
   btnTrimestral.setSelected(false);
    }//GEN-LAST:event_btnAnualActionPerformed

    private void btnAnualStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnAnualStateChanged
        Cambio();
    }//GEN-LAST:event_btnAnualStateChanged

    private void btnTrimestralStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnTrimestralStateChanged
        Cambio();
    }//GEN-LAST:event_btnTrimestralStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    Interfaz.Reppps=false;
    }//GEN-LAST:event_formWindowClosing

    private void btnSemanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSemanalActionPerformed
   btnSemanal.setSelected(true);
   btnMensual.setSelected(false);
   btnAnual.setSelected(false);
   btnTrimestral.setSelected(false);
    }//GEN-LAST:event_btnSemanalActionPerformed

    private void btnMensualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMensualActionPerformed
   btnSemanal.setSelected(false);
   btnMensual.setSelected(true);
   btnAnual.setSelected(false);
   btnTrimestral.setSelected(false);
    }//GEN-LAST:event_btnMensualActionPerformed

    private void btnTrimestralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrimestralActionPerformed
   btnSemanal.setSelected(false);
   btnMensual.setSelected(false);
   btnAnual.setSelected(false);
   btnTrimestral.setSelected(true);
    }//GEN-LAST:event_btnTrimestralActionPerformed

    private void cbx2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbx2ActionPerformed

    private void cbx2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx2ItemStateChanged
        Cambio();
    }//GEN-LAST:event_cbx2ItemStateChanged
private String mess(int ano,int dias){
        Date date=new Date(2019,01,1);
    if(ano==1){
        date=new Date(2020,01,1);
     }
          date=addDays(date,dias);   
           if(date.getMonth()==0){
           return "Enero "+date.getDate();
        } else if(date.getMonth()==1){
           return "Febrero "+date.getDate();
        }else if(date.getMonth()==2){
           return "Marzo "+date.getDate();
        }else if(date.getMonth()==3){
           return "Abril "+date.getDate();
        }else if(date.getMonth()==4){
           return "Mayo "+date.getDate();
        }else if(date.getMonth()==5){
           return "Junio "+date.getDate();
        }else if(date.getMonth()==6){
           return "Julio "+date.getDate();
        }else if(date.getMonth()==7){
           return "Agosto "+date.getDate();
        }else if(date.getMonth()==8){
           return "Septiembre "+date.getDate();
        }else if(date.getMonth()==9){
           return "Octubre "+date.getDate();
        }else if(date.getMonth()==10){
           return "Noviembre "+date.getDate();
        }else {
           return "Diciembre "+date.getDate();
        } 
}
    private void Cambio(){
    cbx1.removeAllItems();
    if(btnSemanal.isSelected()){
        lbl1.setVisible(true);
        cbx1.setVisible(true);
        cbx1.removeAllItems();
        lbl1.setText("Semana");
        int ini=1;
        int finall=1;
        if(cbx2.getSelectedIndex()==0){
         finall=5;
                  cbx1.addItem("S1(Enero 1-Enero 5");
        }else{
            finall=4;
                     cbx1.addItem("S1(Enero 1-Enero 4");
        }
         int cont=1;

         for(int i=finall;i<=365;i+=7){
             cont++;
             if(i+7>=365){
                 cbx1.addItem("S"+cont+"("+mess(cbx2.getSelectedIndex(),i)+"-Diciembre 31)");    
             }else{
                   cbx1.addItem("S"+cont+"("+mess(cbx2.getSelectedIndex(),i)+"-"+mess(cbx2.getSelectedIndex(),i+6)+")");
             }        
         }        
    }else if(btnMensual.isSelected()){
        lbl1.setVisible(true);
        cbx1.setVisible(true);
        cbx1.removeAllItems();
        lbl1.setText("Mes");
        cbx1.addItem("Enero");
        cbx1.addItem("Febrero");
        cbx1.addItem("Marzo");
        cbx1.addItem("Abril");
        cbx1.addItem("Mayo");
        cbx1.addItem("Junio");
        cbx1.addItem("Julio");
        cbx1.addItem("Agosto");
        cbx1.addItem("Septiembre");
        cbx1.addItem("Octubre");
        cbx1.addItem("Noviembre");
        cbx1.addItem("Diciembre");
    } else if(btnAnual.isSelected()){
        lbl1.setVisible(false);
        cbx1.setVisible(false);
    }
    else{
        lbl1.setVisible(true);
        cbx1.setVisible(true);
        cbx1.removeAllItems();
        lbl1.setText("Trimestre");
        cbx1.addItem("Enero-Marzo");
        cbx1.addItem("Abril-Junio");
        cbx1.addItem("Julio-Septiembre");
        cbx1.addItem("Octubre-Diciembre");
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInsumos;
    private javax.swing.JRadioButton btnAnual;
    private javax.swing.JCheckBox btnCobranza;
    private javax.swing.JRadioButton btnMensual;
    private javax.swing.JCheckBox btnProduccion;
    private javax.swing.JCheckBox btnRentabilidad;
    private javax.swing.JRadioButton btnSemanal;
    private javax.swing.JRadioButton btnTrimestral;
    private javax.swing.JCheckBox btnVentas;
    private javax.swing.JComboBox<String> cbx1;
    private javax.swing.JComboBox<String> cbx2;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    // End of variables declaration//GEN-END:variables
  List<Sale> sales;
  List<Client> clients;
  List<Inventory_Reg> inventory;
List<Request> request;
List<Inventory_Type> inventario_actual;
    public void GenReporte(){
         try{
                             try{
            con=new Conexion();
            con.Conectar();
            int ano=2019;
            if(cbx2.getSelectedIndex()==1){
                ano=2020;
            }
            if(btnMensual.isSelected()){
                if(btnVentas.isSelected()){
                    sales=con.GetResumenVentasMes(cbx1.getSelectedIndex()+1,ano);
                }
                if(btnProduccion.isSelected()){
                    inventory=con.GetResumenTranformacionMensual(cbx1.getSelectedIndex()+1, ano);
                    request=con.GetResumenCompradoMensual(cbx1.getSelectedIndex()+1, ano);
                      inventario_actual=con.GetInventoryTypes();
              
                }
                if(btnCobranza.isSelected()){
                    clients=con.GetRegClients();
                }
                if(btnRentabilidad.isSelected()){
                    
                }
          
            } else if(btnSemanal.isSelected()){
                 if(btnVentas.isSelected()){
                      sales=con.GetResumenVentasSemana(cbx1.getSelectedIndex(),ano);
                }
                if(btnProduccion.isSelected()){
                        inventory=con.GetResumenTranformacionSemanal(cbx1.getSelectedIndex(), ano);
                    request=con.GetResumenCompradoSemanal(cbx1.getSelectedIndex(), ano);
                      inventario_actual=con.GetInventoryTypes();
                }
                if(btnCobranza.isSelected()){
                      clients=con.GetRegClients();
                }
                if(btnRentabilidad.isSelected()){
                    
                }
            }
            else if(btnAnual.isSelected()){
                 if(btnVentas.isSelected()){
                      sales=con.GetResumenVentasAno(ano);
                }
                if(btnProduccion.isSelected()){
                    inventory=con.GetResumenTranformacionAnual( ano);
                    request=con.GetResumenCompradoAnual( ano);
                      inventario_actual=con.GetInventoryTypes();
                }
                if(btnCobranza.isSelected()){
                      clients=con.GetRegClients();
                }
                if(btnRentabilidad.isSelected()){
                    
                }
            }else{
                     if(btnVentas.isSelected()){
                      sales=con.GetResumenVentasTrimestre(cbx1.getSelectedIndex()+1,ano);
                }
                if(btnProduccion.isSelected()){
                    inventory=con.GetResumenTranformacionTrimestral(cbx1.getSelectedIndex()+1, ano);
                    request=con.GetResumenCompradoTrimestral(cbx1.getSelectedIndex()+1, ano);
                      inventario_actual=con.GetInventoryTypes();
                }
                if(btnCobranza.isSelected()){
                      clients=con.GetRegClients();
                }
                if(btnRentabilidad.isSelected()){
                    
                }
            }
            
            con.Desconectar();
            }catch(Exception e){}finally{}
        
             
             Document doc=new Document(PageSize.A4.rotate(),10,10,10,10);  
              JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("pdf", "pdf");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString().concat(".pdf");
            PdfWriter.getInstance(doc, new FileOutputStream(ruta));
            doc.open();
             Chunk chunk= new Chunk("Reporte ejecutivo",FontFactory.getFont("ARIAL", 14,Font.BOLD));
             doc.add(new Paragraph(chunk));
           
         Image img= Image.getInstance(System.getProperty("user.home")+"/Documents/MagstoneManager/iconn.jpeg");
             img.scaleToFit(135f,70f);
             img.setAbsolutePosition(650, 500);
            doc.add(img);
            doc.add(new Paragraph("                                   "));
              if(btnMensual.isSelected()){
                doc.add(new Paragraph(cbx1.getSelectedItem().toString()+" "+cbx2.getSelectedItem().toString(),FontFactory.getFont("ARIAL", 12,Font.BOLD)));
            } else if(btnSemanal.isSelected()){
                    doc.add(new Paragraph(cbx1.getSelectedItem().toString()+" "+cbx2.getSelectedItem().toString(),FontFactory.getFont("ARIAL", 12,Font.BOLD)));    
            }
            else if(btnAnual.isSelected()){
                doc.add(new Paragraph(cbx2.getSelectedItem().toString(),FontFactory.getFont("ARIAL", 12,Font.BOLD)));
         
            }else{
                    doc.add(new Paragraph(cbx1.getSelectedItem().toString()+" "+cbx2.getSelectedItem().toString(),FontFactory.getFont("ARIAL", 12,Font.BOLD)));
              
            }
             doc.add(new Paragraph("                                   "));
           
              doc.add(new Paragraph("Fecha de creaci칩n: "+LocalDate.now().toString()));
           
               doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("",FontFactory.getFont("ARIAL", 10,Font.BOLD)));
              double MontoVentas=0;
              PdfPTable datatable;
            if(btnVentas.isSelected()){
                 doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("Nuevas ventas",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
       
                doc.add(new Paragraph("                                   "));
           
            datatable=new PdfPTable(7);
            datatable.getDefaultCell().setPadding(2);
            datatable.setWidthPercentage((float) 100.0);
            datatable.getDefaultCell().setBorder(3);
            datatable.getDefaultCell().setHorizontalAlignment( Element.ALIGN_CENTER);      
            datatable.addCell(new Phrase("Fecha", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Cliente", FontFactory.getFont("ARIAL", 10, Font.BOLD)));
            datatable.addCell(new Phrase("Venta", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Monto de venta", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Productos", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Cantidad", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Costo unitario", FontFactory.getFont("ARIAL", 10,Font.BOLD)));     
            datatable.setHeaderRows(1);
                datatable.getDefaultCell().setBorderWidth((float)1);
                 DecimalFormat formatea = new DecimalFormat("$###,###.##");
                for (Sale obj: sales)
                {
                 //   datatable.addCell(new Phrase(String.valueOf(obj.Id), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Date.getDate()+"-"+obj.Date.getMonth()+"-"+obj.Date.getYear(), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Client, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Description, FontFactory.getFont("ARIAL", 10,Font.NORMAL)));
                datatable.addCell(new Phrase(formatea.format(obj.Monto), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                MontoVentas+=obj.Monto;
               int i=0;
                for (Sale_Inventory obj2: obj.inventory)
                {
                    if(i==0){
                          datatable.addCell(new Phrase(obj2.Inventory, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(String.valueOf(obj2.Qty), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          double unit=0;
                          if(obj2.Qty>0){
             unit=obj2.Amount/obj2.Qty;}
                          datatable.addCell(new Phrase(formatea.format(unit), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                    }else{
                           datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                   datatable.addCell(new Phrase(obj2.Inventory, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(String.valueOf(obj2.Qty), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
               double unit=0;
                          if(obj2.Qty>0){
              unit=obj2.Amount/obj2.Qty;}
                          datatable.addCell(new Phrase(formatea.format(unit), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
             
                    }
                    i++;
                 datatable.completeRow();
               
                }
                }
                                            doc.add(datatable); 
                                      doc.add(new Paragraph("                                   "));
           
              doc.add(new Paragraph("Monto vendido: "+formatea.format(MontoVentas),FontFactory.getFont("ARIAL", 12,Font.BOLD)));
                        
            }
        if(btnProduccion.isSelected()){
                 doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("Compra de materia prima",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
         MontoVentas=0;
                doc.add(new Paragraph("                                   "));
           
            datatable=new PdfPTable(5);
            datatable.getDefaultCell().setPadding(2);
            datatable.setWidthPercentage((float) 100.0);
            datatable.getDefaultCell().setBorder(3);
            datatable.getDefaultCell().setHorizontalAlignment( Element.ALIGN_CENTER);      
            datatable.addCell(new Phrase("Fecha", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Proveedor", FontFactory.getFont("ARIAL", 10, Font.BOLD)));
            datatable.addCell(new Phrase("Materia prima", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Cantidad", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Costo unitario", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.setHeaderRows(1);
                datatable.getDefaultCell().setBorderWidth((float)1);
                 DecimalFormat formatea = new DecimalFormat("$###,###.##");
                for (Request obj: request)
                {
                 //   datatable.addCell(new Phrase(String.valueOf(obj.Id), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Date.getDate()+"-"+obj.Date.getMonth()+"-"+obj.Date.getYear(), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Provider, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                MontoVentas+=obj.Monto;
               int j=0;
                for (Inventory obj2: obj.Inventory)
                {
                    if(j==0){
                          datatable.addCell(new Phrase(obj2.Type, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(String.valueOf(obj2.Qty), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          double unit=0;
                          if(obj2.Qty>0){
             unit=obj2.Cost/obj2.Qty;}
                          datatable.addCell(new Phrase(formatea.format(unit), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                    }else{
                           datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                   datatable.addCell(new Phrase(obj2.Type, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(String.valueOf(obj2.Qty), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          double unit=0;
                          if(obj2.Qty>0){
             unit=obj2.Cost/obj2.Qty;}
                          datatable.addCell(new Phrase(formatea.format(unit), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
           
                    }
                    j++;
                 datatable.completeRow();
               
                }
                }
                                            doc.add(datatable); 
                                      doc.add(new Paragraph("                                   "));
           
              doc.add(new Paragraph("Monto de materia prima comprado: "+formatea.format(MontoVentas),FontFactory.getFont("ARIAL", 12,Font.BOLD)));
                        
              //////////////////////////////////////transformaci칩n
                   doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("Transformaci칩n de producto",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
         MontoVentas=0;
                doc.add(new Paragraph("                                   "));
           
            datatable=new PdfPTable(4);
            datatable.getDefaultCell().setPadding(2);
            datatable.setWidthPercentage((float) 100.0);
            datatable.getDefaultCell().setBorder(3);
            datatable.getDefaultCell().setHorizontalAlignment( Element.ALIGN_CENTER);      
            datatable.addCell(new Phrase("Fecha", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Producto", FontFactory.getFont("ARIAL", 10, Font.BOLD)));
            datatable.addCell(new Phrase("Cantidad", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
              datatable.addCell(new Phrase("Materia prima", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
          
            datatable.setHeaderRows(1);
                datatable.getDefaultCell().setBorderWidth((float)1);
                for (Inventory_Reg obj: inventory)
                {
                 //   datatable.addCell(new Phrase(String.valueOf(obj.Id), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Date.getDate()+"-"+obj.Date.getMonth()+"-"+obj.Date.getYear(), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
               int k=0;
                for (Inventory_Moves obj2: obj.list)
                {
                    if(k==0){
                          datatable.addCell(new Phrase(obj2.In, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(String.valueOf(obj2.Qty), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(obj2.Out, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                         }else{
                           datatable.addCell(new Phrase("", FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                             datatable.addCell(new Phrase(obj2.In, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(String.valueOf(obj2.Qty), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                          datatable.addCell(new Phrase(obj2.Out, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                        
                    }
                    k++;
                 datatable.completeRow();
               
                }
                }
                                            doc.add(datatable); 
                                      doc.add(new Paragraph("                                   "));
           
              doc.add(new Paragraph("                             ",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
                        
              //////////////////////////////inventario
              
                             doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("Inventario actual",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
                doc.add(new Paragraph("                                   "));
           
            datatable=new PdfPTable(5);
            datatable.getDefaultCell().setPadding(2);
            datatable.setWidthPercentage((float) 100.0);
            datatable.getDefaultCell().setBorder(3);
            datatable.getDefaultCell().setHorizontalAlignment( Element.ALIGN_CENTER);      
            datatable.addCell(new Phrase("Categor칤a", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Producto", FontFactory.getFont("ARIAL", 10, Font.BOLD)));
            datatable.addCell(new Phrase("Costo proveedor", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
              datatable.addCell(new Phrase("Precio unitario", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Inventario actual", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
          
            datatable.setHeaderRows(1);
                datatable.getDefaultCell().setBorderWidth((float)1);
                for (Inventory_Type obj: inventario_actual)
                {
                datatable.addCell(new Phrase(obj.Category, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                 datatable.addCell(new Phrase(obj.Description, FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(formatea.format(obj.Cost), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(formatea.format(obj.Price), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(String.valueOf(obj.TotalStock), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));   
                }
                                            doc.add(datatable); 
                                      doc.add(new Paragraph("                                   "));
           
              doc.add(new Paragraph("                             ",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
                        
            }
        
        //////////cobranza
            if(btnCobranza.isSelected()){
                 doc.add(new Paragraph("                                   "));
            doc.add(new Paragraph("Cobranza de clientes",FontFactory.getFont("ARIAL", 12,Font.BOLD)));
       
                doc.add(new Paragraph("                                   "));
           MontoVentas=0;
            datatable=new PdfPTable(4);
            datatable.getDefaultCell().setPadding(2);
            datatable.setWidthPercentage((float) 100.0);
            datatable.getDefaultCell().setBorder(3);
            datatable.getDefaultCell().setHorizontalAlignment( Element.ALIGN_CENTER);      
            datatable.addCell(new Phrase("Cliente", FontFactory.getFont("ARIAL", 10, Font.BOLD)));
            datatable.addCell(new Phrase("Monto total", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Monto pagado", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.addCell(new Phrase("Saldo", FontFactory.getFont("ARIAL", 10,Font.BOLD)));
            datatable.setHeaderRows(1);
                datatable.getDefaultCell().setBorderWidth((float)1);
                 DecimalFormat formatea = new DecimalFormat("$###,###.##");
                for (Client obj: clients)
                {
                    if(obj.Saldo()>0){
                 //   datatable.addCell(new Phrase(String.valueOf(obj.Id), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(obj.Description, FontFactory.getFont("ARIAL", 10,Font.NORMAL)));
                datatable.addCell(new Phrase(formatea.format(obj.Monto), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(formatea.format(obj.MontoPagado), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));
                datatable.addCell(new Phrase(formatea.format(obj.Saldo()), FontFactory.getFont("ARIAL", 10, Font.NORMAL)));         
                MontoVentas+=obj.Saldo();          
                 datatable.completeRow();
                    }
                }
                
                                            doc.add(datatable); 
                                      doc.add(new Paragraph("                                   "));
           
              doc.add(new Paragraph("Saldo total: "+formatea.format(MontoVentas),FontFactory.getFont("ARIAL", 12,Font.BOLD)));
                        
            }
                doc.addCreationDate();
                doc.close();
           
            
        }
    
    }catch(Exception e){}}
}
